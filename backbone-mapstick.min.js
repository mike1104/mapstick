/*! MapStick (backbone-mapstick) - v0.1.0 - 2015-07-22
* Copyright (c) 2015 Mike McIver; Distributed under MIT license */

(function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b=[].indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(b in this&&this[b]===a)return b;return-1},c=function(a,b){function c(){this.constructor=a}for(var e in b)d.call(b,e)&&(a[e]=b[e]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},d={}.hasOwnProperty;window.MapStick=function(){return{extend:Backbone.Model.extend}},MapStick.ChildViewContainer=function(){function b(b){this._updateLength=a(this._updateLength,this),this.apply=a(this.apply,this),this.call=a(this.call,this),this.remove=a(this.remove,this),this.findByCid=a(this.findByCid,this),this.findByIndex=a(this.findByIndex,this),this.findByCustom=a(this.findByCustom,this),this.findByModelCid=a(this.findByModelCid,this),this.findByModel=a(this.findByModel,this),this.add=a(this.add,this),this._views={},this._indexByModel={},this._indexByCustom={},this._methods=["forEach","each","map","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","toArray","first","initial","rest","last","without","isEmpty","pluck"],_.each(this._methods,function(a){return function(c){return a[c]=function(){var d;return b=_.values(a._views),d=[b].concat(_.toArray(arguments)),_[c].apply(_,d)}}}(this)),this._updateLength(),_.each(b,this.add)}return b.prototype.add=function(a,b){var c,d;return d=a.cid,this._views[d]=a,(c=a.model)&&(this._indexByModel[c.cid]=d),b&&(this._indexByCustom[b]=d),this._updateLength(),this},b.prototype.findByModel=function(a){return this.findByModelCid(a.cid)},b.prototype.findByModelCid=function(a){var b;return b=this._indexByModel[a],this.findByCid(b)},b.prototype.findByCustom=function(a){var b;return b=this._indexByCustom[a],this.findByCid(b)},b.prototype.findByIndex=function(a){return _.values(this._views)[a]},b.prototype.findByCid=function(a){return this._views[a]},b.prototype.remove=function(a){var b;return b=a.cid,a.model&&delete this._indexByModel[a.model.cid],_.any(this._indexByCustom,function(a){return function(c,d){return c===b?(delete a._indexByCustom[d],!0):void 0}}(this),this),delete this._views[b],this._updateLength(),this},b.prototype.call=function(a){return this.apply(a,_.tail(arguments))},b.prototype.apply=function(a,b){return _.each(this._views,function(c){return function(c){return _.isFunction(c[a])?c[a].apply(c,b||[]):void 0}}(this))},b.prototype._updateLength=function(){return this.length=_.size(this._views)},b}(),MapStick.getOption=function(a,c){return a&&c?a.options&&b.call(a.options,c)>=0&&void 0!==a.options[c]?a.options[c]:a[c]:null},MapStick.triggerMethod=function(){var a,b,c;return b=/(^|:)(\w)/gi,a=function(a,b,c){return c.toUpperCase()},c=function(c){return function(d){var e,f;return f="on"+d.replace(b,a),e=c[f],_.isFunction(c.trigger)&&c.trigger.apply(c,arguments),_.isFunction(e)?e.apply(c,_.tail(arguments)):void 0}}(this)},MapStick.actAsCollection=function(a,b){var c;return c=["forEach","each","map","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","toArray","first","initial","rest","last","without","isEmpty","pluck"],_.each(c,function(c){return function(d){return a[d]=function(){var a,e;return e=_.values(_.result(c,b)),a=[e].concat(_.toArray(arguments)),_[d].apply(_,a)}}}(this))},MapStick.decodePathString=function(a){return google.maps.geometry?a&&_.isString(a)&&""!==a?google.maps.geometry.encoding.decodePath(a):[]:console.error("please include google.maps.geometry library")},MapStick.encodePathString=function(a){return google.maps.geometry?a?google.maps.geometry.encoding.encodePath(a):void 0:console.error("please include google.maps.geometry library")},MapStick.isClockwise=function(a){var b,c,d,e;return _.isArray(a)||(a=a.getArray()),a.push(a[0]),b=0,e=0,c=null,d=null,_.each(a,function(a){var f,g;return g=a.lng(),f=a.lat(),d&&c&&(b+=g*c,e+=f*d),d=g,c=f}),b-e>0},MapStick.Overlay=function(d){function e(b){var c;null==b&&(b={}),this.getDrawnOptions=a(this.getDrawnOptions,this),this.abandonOverlay=a(this.abandonOverlay,this),this.saveOverlay=a(this.saveOverlay,this),this.stopDrawing=a(this.stopDrawing,this),this.completeDraw=a(this.completeDraw,this),this.cancelDraw=a(this.cancelDraw,this),this.handleKey=a(this.handleKey,this),this.draw=a(this.draw,this),this.render=a(this.render,this),this.clearListeners=a(this.clearListeners,this),this.remove=a(this.remove,this),this.hide=a(this.hide,this),this.show=a(this.show,this),this.set=a(this.set,this),this.get=a(this.get,this),this.triggerOverlayEvent=a(this.triggerOverlayEvent,this),this.setBoundOverlayAttributes=a(this.setBoundOverlayAttributes,this),this.setBoundModelAttributes=a(this.setBoundModelAttributes,this),this.listenToBoundOverlayEvents=a(this.listenToBoundOverlayEvents,this),this.listenToBoundModelChanges=a(this.listenToBoundModelChanges,this),this.bindPosition=a(this.bindPosition,this),this.setBindings=a(this.setBindings,this),this.listenToModel=a(this.listenToModel,this),this.attachOverlayEvents=a(this.attachOverlayEvents,this),this.buildOverlay=a(this.buildOverlay,this),this.googleDrawingOverlayType=a(this.googleDrawingOverlayType,this),this.googleOverlayType=a(this.googleOverlayType,this),this.cid=_.uniqueId("overlay"),this.options=_.extend({},_.result(this,"options"),_.isFunction(b)?b.call(this):b),this.overlayOptions=_.pick(b,this.properties),_.defaults(this.overlayOptions,this.defaultOptions),this[this.overlayType]=this.overlay=this.buildOverlay(this.overlayOptions),_.extend(this,_.pick(b,this.viewOptions)),this.attachOverlayEvents(),this.listenToModel(),this.setBindings(),_.isFunction(this.initialize)&&this.initialize(this.options),this.model.on("destroy",this.remove),"info_window"===this.overlayType?(c=this.options.content_view)&&this.setContentView(c):this.model.on("draw",this.draw)}return c(e,d),e.prototype.googleOverlayType=function(){return this.overlayType.split("_").map(function(a){return a.charAt(0).toUpperCase()+a.slice(1)}).join("")},e.prototype.googleDrawingOverlayType=function(){return google.maps.drawing.OverlayType[""+this.overlayType.split("_").map(function(a){return a.toUpperCase()}).join("")]},e.prototype.defaultOptions={},e.prototype.properties=[],e.prototype.overlayEvents={},e.prototype.viewOptions=["model","events","map"],e.prototype.bindings={},e.prototype.defaultOverlayEvents=[],e.prototype.modelEvents={},e.prototype.triggerMethod=MapStick.triggerMethod,e.prototype.showing=!1,e.prototype.buildOverlay=function(a){return new(google.maps[this.googleOverlayType()])(a)},e.prototype.attachOverlayEvents=function(){return _.each(this.overlayEventNames,function(a){return function(b){return google.maps.event.addListener(a.overlay,b,function(c){return _.isFunction(a.trigger)&&a.trigger(b,c),a.triggerOverlayEvent(b,c)})}}(this))},e.prototype.listenToModel=function(){return this.model?_.each(this.modelEvents,function(a){return function(b,c){var d;return _.isFunction(d=a[b])?a.model.on(c,d):void 0}}(this)):void 0},e.prototype.setBindings=function(){return _.each(this.bindings,function(a){return function(c,d){var e;if(_.isString(c)&&(c={attribute:c,overlayChanged:!0}),_.isObject(c)){if(c.overlay_attribute=d,"position"===d&&_.isString(c.lat)&&_.isString(c.lng))return a.bindPosition(c);if((e=c.attributes||c.attribute)&&(_.isString(e)&&(c.attributes=e=[e]),a.setBoundOverlayAttributes(c),a.listenToBoundModelChanges(c),b.call(a.twoWayProperties,d)>=0))return a.listenToBoundOverlayEvents(c)}}}(this))},e.prototype.bindPosition=function(a){var b,c,d,e;return null==a&&(a={}),b=a.lat,c=a.lng,e=function(a){return function(){return a.model.has(b)&&a.model.has(c)?a.set({position:new google.maps.LatLng(a.model.get(b),a.model.get(c))}):void 0}}(this),e(),this.model.on("change:"+b+" change:"+c,function(a){return function(a,b,c){var d;return d=(null!=c?c:{}).mapstickChange,d?void 0:e()}}(this)),d=a.overlayEvents||this.defaultOverlayEvents,_.each(d,function(a){return function(d){return google.maps.event.addListener(a.overlay,d,function(d){var e,f;return(f=a.get("position"))?(e={},e[b]=f.lat(),e[c]=f.lng(),a.model.set(e,{mapstickChange:!0})):void 0})}}(this))},e.prototype.listenToBoundModelChanges=function(a){var b,c;return null==a&&(a={}),b=a.attributes,c=b.map(function(a){return"change:"+a}).join(" "),this.model.on(c,function(b){return function(c,d,e){var f;return f=(null!=e?e:{}).mapstickChange,f?void 0:b.setBoundOverlayAttributes(a)}}(this))},e.prototype.listenToBoundOverlayEvents=function(a){var b,c;return null==a&&(a={}),c=a.overlay_attribute,(b=a.overlayEvents)&&_.isString(b)&&(b=[b]),null==b&&(b=this.defaultOverlayEvents),_.each(b,function(b){return function(d){return google.maps.event.addListener(b.overlay,d,function(e){return"drawn"===d&&("paths"===c?b._listenToPaths(a):"path"===c&&b._listenToPath(a)),b.setBoundModelAttributes(a,e)})}}(this))},e.prototype.setBoundModelAttributes=function(a,b){var c,d,e,f,g;return null==a&&(a={}),a.overlayChanged?(f=a.overlay_attribute,d=a.attributes,c="paths"===f?this.overlay.getPaths():"path"===f?this.overlay.getPath():this.get(f),g={},e=a.overlayChanged,_.isFunction(e)?g=e(c,b):_.isString(e)&&_.isFunction(this[e])?g=this[e](c,b):e===!0&&1===d.length&&(g[d[0]]=c),this.model.set(g,{mapstickChange:!0})):void 0},e.prototype.setBoundOverlayAttributes=function(a){var b,c,d,e,f,g;return null==a&&(a={}),b=a.attributes,e=a.overlay_attribute,c={},_.each(b,function(a){return function(b){return c[b]=a.model.get(b)}}(this)),f={},(d=a.modelChanged)?(g=null,_.isFunction(d)?g=d(c):_.isFunction(this[d])&&(g=this[d](c)),f[e]=g):1===b.length&&(f[e]=this.model.get(b[0])),this.set(f),"paths"===e?this._listenToPaths(a):"path"===e?this._listenToPath(a):void 0},e.prototype.triggerOverlayEvent=function(a,b){var c,d;return(c=this.overlayEvents[a])&&(d=this[c],_.isFunction(d)?d(b):console.error("no such handler for event: '"+a+"'")),d=this["on"+a.split("_").map(function(a){return a.charAt(0).toUpperCase()+a.slice(1)}).join("")],_.isFunction(d)?d(b):void 0},e.prototype.get=function(a){return this.overlay.get(a)},e.prototype.set=function(a,b){return _.isObject(a)?this.overlay.setOptions(a):_.isString(a)?this.overlay.set(a,b):console.error("can't set that")},e.prototype.show=function(a){return this.showing=!0,a&&(this.map=a),this.set("map",this.map)},e.prototype.hide=function(){return this.showing=!1,this.set("map",null)},e.prototype.remove=function(){return this.clearListeners(),this.set("map",null)},e.prototype.clearListeners=function(){return this.overlay?google.maps.event.clearListeners(this.overlay):void 0},e.prototype.render=function(){return this.showing?this.overlay.setMap(this.map):void 0},e.prototype.draw=function(a){return null==a&&(a=this.map),google.maps.drawing?(this._cancelled=!1,null==MapStick.drawingManager&&(MapStick.drawingManager=new google.maps.drawing.DrawingManager({map:a,drawingControl:!1})),MapStick.drawingManager.setMap(a),MapStick.drawingManager.setDrawingMode(this.overlayType),google.maps.event.clearInstanceListeners(MapStick.drawingManager),google.maps.event.addListener(MapStick.drawingManager,"overlaycomplete",function(a){return function(b){return MapStick.drawingManager.getDrawingMode()&&a.stopDrawing(),a._cancelled?a.abandonOverlay(b.overlay):a.saveOverlay(b.overlay)}}(this))):console.error("please include google.maps.drawing library")},e.prototype.handleKey=function(a){return 27===a.keyCode&&this.cancelDraw(),13===a.keyCode?this.completeDraw():void 0},e.prototype.cancelDraw=function(a){return this._cancelled=!0,this.stopDrawing()},e.prototype.completeDraw=function(a){return this._cancelled=!1,this.stopDrawing()},e.prototype.stopDrawing=function(){return this._key_listener&&google.maps.event.removeListener(this._key_listener),MapStick.drawingManager.setDrawingMode(null),MapStick.drawingManager.setMap(null)},e.prototype.saveOverlay=function(a){return this.overlay.setOptions(this.getDrawnOptions(a)),this.model.trigger("overlay:drawn"),google.maps.event.trigger(this.overlay,"drawn"),a.setMap(null),this.show()},e.prototype.abandonOverlay=function(a){return this.model.trigger("overlay:cancelled"),google.maps.event.trigger(this.overlay,"cancelled"),a.setMap(null)},e.prototype.getDrawnOptions=function(a){return{}},e}(Backbone.View),MapStick.Marker=function(b){function d(){return this.getDrawnOptions=a(this.getDrawnOptions,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.overlayType="marker",d.prototype.overlayEventNames=["animation_changed","click","clickable_changed","cursor_changed","dblclick","drag","dragend","draggable_changed","dragstart","flat_changed","icon_changed","mousedown","mouseout","mouseover","mouseup","position_changed","rightclick","shape_changed","title_changed","visible_changed","zindex_changed"],d.prototype.defaultOverlayEvents=["drag","dragend","dragstart","drawn"],d.prototype.twoWayProperties=["position"],d.prototype.properties=["anchorPoint","animation","clickable","crossOnDrag","cursor","draggable","icon","map","opacity","optimized","position","shape","title","visible","zIndex"],d.prototype.getDrawnOptions=function(a){return{position:a.getPosition()}},d}(MapStick.Overlay),MapStick.OverlayWithPath=function(b){function d(){return this._listenToPath=a(this._listenToPath,this),this.getDrawnOptions=a(this.getDrawnOptions,this),this.setOverlayPathFromEncodedString=a(this.setOverlayPathFromEncodedString,this),this.getEncodedPathFromOverlay=a(this.getEncodedPathFromOverlay,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.defaultOptions={path:new google.maps.MVCArray},d.prototype.getEncodedPathFromOverlay=function(){return MapStick.encodePathString(this.overlay.getPath())},d.prototype.setOverlayPathFromEncodedString=function(a){return this.overlay.setPath(MapStick.decodePathString(a))},d.prototype.getDrawnOptions=function(a){return{path:a.getPath()}},d.prototype._listenToPath=function(a){var b;return null==a&&(a={}),b=this.overlay.getPath(),_.each(["insert_at","remove_at","set_at"],function(c){return function(d){return google.maps.event.addListener(b,d,function(b){return c.setBoundModelAttributes(a,b)})}}(this))},d}(MapStick.Overlay),MapStick.Polyline=function(b){function d(){return this.getBounds=a(this.getBounds,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.overlayType="polyline",d.prototype.overlayEventNames=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],d.prototype.defaultOverlayEvents=["drag","dragend","drawn"],d.prototype.twoWayProperties=["path"],d.prototype.properties=["clickable","draggable","editable","geodesic","icons","map","path","strokeColor","strokeOpacity","strokeWeight","visible","zIndex"],d.prototype.getBounds=function(){var a;return a=new google.maps.LatLngBounds,this.overlay.getPath().forEach(function(b){return a.extend(b)}),a},d}(MapStick.OverlayWithPath),MapStick.Polygon=function(b){function d(){return this.getBounds=a(this.getBounds,this),this._listenToPaths=a(this._listenToPaths,this),this.setOverlayPathsFromEncodedStrings=a(this.setOverlayPathsFromEncodedStrings,this),this.getEncodedPathsFromOverlay=a(this.getEncodedPathsFromOverlay,this),this.finishExclusion=a(this.finishExclusion,this),this.drawExclusion=a(this.drawExclusion,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.overlayType="polygon",d.prototype.overlayEventNames=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],d.prototype.defaultOverlayEvents=["drag","dragend","drawn"],d.prototype.twoWayProperties=["paths"],d.prototype.properties=["zIndex","visible","strokeWeight","strokePosition","strokeOpacity","strokeColor","paths","map","geodesic","fillOpacity","fillColor","editable","draggable","clickable"],d.prototype.drawExclusion=function(){return google.maps.drawing?(null==MapStick.drawingManager&&(MapStick.drawingManager=new google.maps.drawing.DrawingManager({map:this.map,drawingControl:!1})),MapStick.drawingManager.setDrawingMode("polygon"),google.maps.event.clearInstanceListeners(MapStick.drawingManager),google.maps.event.addListener(MapStick.drawingManager,"polygoncomplete",function(a){return function(b){return a.finishExclusion(b)}}(this))):console.error("please include google.maps.drawing library")},d.prototype.finishExclusion=function(a){var b,c;return b=a.getPath(),MapStick.isClockwise(b)===MapStick.isClockwise(this.overlay.getPath())&&(b=new google.maps.MVCArray(b.getArray().reverse())),c=this.overlay.getPaths(),c.push(b),this.overlay.setPaths(c),a.setMap(null),MapStick.drawingManager.setDrawingMode(null),google.maps.event.trigger(this.overlay,"drawn")},d.prototype.getEncodedPathsFromOverlay=function(){return _.collect(this.overlay.getPaths().getArray(),function(a){return function(a){return MapStick.encodePathString(a)}}(this))},d.prototype.setOverlayPathsFromEncodedStrings=function(a){return _.isString(a)&&(a=a.split(",")),a=_.collect(a,function(a){return function(a){return MapStick.decodePathString(a)}}(this)),this.overlay.setPaths(a)},d.prototype._listenToPaths=function(a){var b;return null==a&&(a={}),b=this.overlay.getPaths(),_.each(["insert_at","remove_at","set_at"],function(c){return function(d){return b.forEach(function(b){return google.maps.event.addListener(b,d,function(b){return c.setBoundModelAttributes(a)})})}}(this))},d.prototype.getBounds=function(){var a;return a=new google.maps.LatLngBounds,this.overlay.getPaths().forEach(function(b){return b.forEach(function(b){return a.extend(b)})}),a},d}(MapStick.OverlayWithPath),MapStick.Rectangle=function(b){function d(){return this.getDrawnOptions=a(this.getDrawnOptions,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.overlayType="rectangle",d.prototype.overlayEventNames=["bounds_changed","click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],d.prototype.defaultOverlayEvents=["drag","dragend","dragstart","drawn"],d.prototype.twoWayProperties=["bounds"],d.prototype.properties=["bounds","clickable","draggable","editable","fillColor","fillOpacity","map","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex"],d.prototype.getDrawnOptions=function(a){return{bounds:a.getBounds()}},d}(MapStick.Overlay),MapStick.Circle=function(b){function d(){return this.getDrawnOptions=a(this.getDrawnOptions,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.overlayType="circle",d.prototype.overlayEventNames=["center_changed","click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseup","mouseover","radius_changed","rightclick"],d.prototype.defaultOverlayEvents=["drag","dragend","dragstart","drawn"],d.prototype.twoWayProperties=["center","radius"],d.prototype.properties=["center","clickable","draggable","editable","fillColor","fillOpacity","map","radius","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex"],d.prototype.getDrawnOptions=function(a){return{center:a.getCenter(),radius:a.getRadius()}},d}(MapStick.Overlay),MapStick.InfoWindow=function(b){function d(){return this.setContentView=a(this.setContentView,this),this.remove=a(this.remove,this),this.close=a(this.close,this),this.open=a(this.open,this),this.isOpen=a(this.isOpen,this),d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.overlayType="info_window",d.prototype.overlayEventNames=["closeclick","content_changed","domready","position_changed","zindex_changed"],d.prototype.twoWayProperties=["content"],d.prototype.properties=["content","disableAutoPan","maxWidth","pixelOffset","position","zIndex"],d.prototype.isOpen=function(){var a;return a=this.get("map"),null!==a&&"undefined"!=typeof a},d.prototype.open=function(a){var b,c,d,e;return e=null!=a?a:{},c=e.map,b=e.anchor,d=e.position,b?this.overlay.open(c||(c=b.getMap()),b):d&&(this.overlay.setPosition(d),c||(c=this.map))?this.overlay.open(c):void 0},d.prototype.close=function(){return this.overlay.close()},d.prototype.remove=function(){return this.close(),d.__super__.remove.apply(this,arguments)},d.prototype.setContentView=function(a){return null==a&&(a=this.content_view),a.render(),this.overlay.setContent(a.$el[0])},d}(MapStick.Overlay),MapStick.OverlayCollection=function(b){function d(b){this.closeChildren=a(this.closeChildren,this),this.close=a(this.close,this),this.triggerRendered=a(this.triggerRendered,this),this.triggerBeforeRender=a(this.triggerBeforeRender,this),this._initChildViewStorage=a(this._initChildViewStorage,this),this.removeChildView=a(this.removeChildView,this),this.removeItemView=a(this.removeItemView,this),this.buildItemView=a(this.buildItemView,this),this.addItemView=a(this.addItemView,this),this.getItemView=a(this.getItemView,this),this.showCollection=a(this.showCollection,this),this._renderChildren=a(this._renderChildren,this),this.render=a(this.render,this),this.hide=a(this.hide,this),this.show=a(this.show,this),this.addChildView=a(this.addChildView,this),this.removeListeners=a(this.removeListeners,this),this.listenToCollection=a(this.listenToCollection,this),this._initialEvents=a(this._initialEvents,this),this._initialCollection=a(this._initialCollection,this),this.options=_.extend({},_.result(this,"options"),_.isFunction(b)?b.call(this):b),_.extend(this,_.pick(b,this.viewOptions)),this._initChildViewStorage(),this._initialCollection(),this._initialEvents(),this.listenToCollection(),_.isFunction(this.initialize)&&this.initialize(this.options)}return c(d,b),d.prototype.itemType="model",d.prototype.triggerMethod=MapStick.triggerMethod,d.prototype.viewOptions=["collection","model","map"],d.prototype.showing=!1,d.prototype.collectionEvents={},d.prototype._initialCollection=function(){return this.collection.each(function(a){return function(b,c){var d;return(d=a.getItemView(b))?a.addItemView(b,d,c):void 0}}(this))},d.prototype._initialEvents=function(){return this.collection?(this.listenTo(this.collection,"add",this.addChildView),this.listenTo(this.collection,"remove",this.removeItemView),this.listenTo(this.collection,"reset",this.render)):void 0},d.prototype.listenToCollection=function(){return this.collection?_.each(this.collectionEvents,function(a){return function(b,c){var d;return _.isFunction(d=a[b])?a.collection.on(c,d):void 0}}(this)):void 0},d.prototype.removeListeners=function(){return this.collection?(this.stopListening(this.collection,"add"),this.stopListening(this.collection,"remove"),this.stopListening(this.collection,"reset")):void 0},d.prototype.addChildView=function(a,b,c){var d;return(d=this.getItemView(a))?this.addItemView(a,d):void 0},d.prototype.show=function(a){return this.showing=!0,a&&(this.map=a),this.children.apply("show")},d.prototype.hide=function(){return this.showing=!1,this.children.apply("hide")},d.prototype.render=function(){return this.isClosed=!1,this.triggerBeforeRender(),this._renderChildren(),this.triggerRendered(),this},d.prototype._renderChildren=function(){return this.closeChildren(),this.showCollection()},d.prototype.showCollection=function(){return this.collection.each(function(a){return function(b){var c;return(c=a.getItemView(b))?a.addItemView(b,c):void 0}}(this))},d.prototype.getItemView=function(a){var b;return b=MapStick.getOption(this,"itemView"),b||console.error("An 'itemView' must be specified for class: "+this.constructor.name),b},d.prototype.addItemView=function(a,b,c){var d,e;return d=MapStick.getOption(this,"itemViewOptions"),_.isFunction(d)&&(d=d.call(this,a,c)),e=this.buildItemView(a,b,d),this.triggerMethod("before:item:added",e),this.children.add(e),this.showing?e.show():e.hide(),this.triggerMethod("after:item:added",e),e},d.prototype.buildItemView=function(a,b,c){var d,e;return d=_.extend({model:a,map:this.map},c),e=new b(d)},d.prototype.removeItemView=function(a){var b;return b=this.children.findByModel(a),this.removeChildView(b)},d.prototype.removeChildView=function(a){return a&&(a.close?a.close():a.remove&&a.remove(),this.stopListening(a),this.children.remove(a)),this.triggerMethod("item:removed",a)},d.prototype._initChildViewStorage=function(){return this.children=new MapStick.ChildViewContainer},d.prototype.triggerBeforeRender=function(){return this.triggerMethod("before:render",this),this.triggerMethod("collection:before:render",this)},d.prototype.triggerRendered=function(){return this.triggerMethod("render",this),this.triggerMethod("collection:rendered",this)},d.prototype.close=function(){return this.isClosed?void 0:(this.triggerMethod("collection:before:close"),this.closeChildren(),this.removeListeners(),this.triggerMethod("collection:closed"))},d.prototype.closeChildren=function(){return this.children.each(function(a){return function(b,c){return a.removeChildView(b)}}(this))},d}(Backbone.View)}).call(this);